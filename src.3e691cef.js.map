{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","opts","selector","targetDate","pad","i","String","padStart","getTimeComps","j","days","Math","floor","hours","mins","secs","start","setInterval","idOfTimer","document","querySelector","htmlDays","htmlHours","htmlMins","htmlSecs","currentTime","Date","now","time","console","log","textContent","timer"],"mappings":";AAAA,MAAMA,EACFC,YAAYC,GACHC,KAAAA,SAAWD,EAAKC,SAChBC,KAAAA,WAAaF,EAAKE,WAE3BC,IAAIC,GACOC,OAAAA,OAAOD,GAAGE,SAAS,EAAG,KAEjCC,aAAaC,GAMF,MAAA,CAAEC,KALI,KAAKN,IAAIO,KAAKC,MAAMH,EAAK,QAKvBI,MAJD,KAAKT,IAAIO,KAAKC,MAAOH,EAAK,MAAyB,OAI3CK,KAHT,KAAKV,IAAIO,KAAKC,MAAOH,EAAK,KAAoB,MAG/BM,KAFf,KAAKX,IAAIO,KAAKC,MAAOH,EAAK,IAAc,OAIzDO,QACIC,YAAY,KACFC,MAAAA,EAAYC,SAASC,cAAc,KAAKlB,UACxCmB,EAAWH,EAAUE,cAAc,6BACnCE,EAAYJ,EAAUE,cAAc,8BACpCG,EAAWL,EAAUE,cAAc,6BACnCI,EAAWN,EAAUE,cAAc,6BAEnCK,EAAcC,KAAKC,MACnBC,EAAO,KAAKzB,WAAasB,GACzB,KAAEf,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKP,aAAaoB,GACtDC,QAAQC,OAAOpB,KAAQG,KAASC,KAAQC,KAExCM,EAASU,eAAiBrB,IAC1BY,EAAUS,eAAiBlB,IAC3BU,EAASQ,eAAiBjB,IAC1BU,EAASO,eAAiBhB,KAC3B,MAIX,MAAMiB,EAAQ,IAAIjC,EAAe,CACzBG,SAAU,WACVC,WAAY,IAAIuB,KAAK,kBAG7BM,EAAMhB","file":"src.3e691cef.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n    constructor(opts) {\n        this.selector = opts.selector;\n        this.targetDate = opts.targetDate;\n    }\n    pad(i) {\n        return String(i).padStart(2, '0');\n    };\n    getTimeComps(j) {\n        const days = this.pad(Math.floor(j / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((j % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((j % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((j % (1000 * 60)) / 1000));\n    \n        return { days, hours, mins, secs };\n    }\n    start () {\n        setInterval(() => {\n            const idOfTimer = document.querySelector(this.selector);\n            const htmlDays = idOfTimer.querySelector('span[data-value = \"days\"]')\n            const htmlHours = idOfTimer.querySelector('span[data-value = \"hours\"]')\n            const htmlMins = idOfTimer.querySelector('span[data-value = \"mins\"]')\n            const htmlSecs = idOfTimer.querySelector('span[data-value = \"secs\"]')\n        \n            const currentTime = Date.now();\n            const time = this.targetDate - currentTime;\n            const { days, hours, mins, secs } = this.getTimeComps(time);\n            console.log(`${days}:${hours}:${mins}:${secs}`);\n\n            htmlDays.textContent = `${days}`;\n            htmlHours.textContent = `${hours}`;\n            htmlMins.textContent = `${mins}`;\n            htmlSecs.textContent = `${secs}`;\n        }, 1000)\n    }\n}\n\nconst timer = new CountdownTimer({\n        selector: '#timer-1',\n        targetDate: new Date('Jul 17, 2022'),\n      });\n\ntimer.start();"]}